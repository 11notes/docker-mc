name: "s3"

x-lockdown: &lockdown
  # prevents write access to the image itself
  read_only: true
  # prevents any process within the container to gain more privileges
  security_opt:
    - "no-new-privileges=true"

services:
  minio:
    image: "11notes/minio:2025.10.15"
    hostname: "minio2"
    <<: *lockdown
    environment:
      TZ: "Europe/Zurich"
      MINIO_ROOT_CA_KEY_FILE: "/run/secrets/ca_key"
      MINIO_ROOT_CA_CRT_FILE: "/run/secrets/ca_crt"
      MINIO_ROOT_PASSWORD_FILE: "/run/secrets/password"
    command: "https://minio/mnt/disk{1...2}"
    ports:
      - "3000:3000/tcp"
    volumes:
      - "minio.ssl:/minio/ssl"
      - "/mnt/minio:/mnt"
    tmpfs:
      # needed for read-only
      - "/run/secrets:uid=1000,gid=1000"
    secrets:
      - "ca_key"
      - "ca_crt"
      - "password"
    networks:
      frontend:
      backend:
    restart: "always"

  mc:
    depends_on:
      minio:
        condition: "service_healthy"
        restart: true
    image: "11notes/mc:2025.08.13"
    <<: *lockdown
    environment:
      TZ: "Europe/Zurich"
      MC_MINIO_URL: "https://minio:9000"
      MC_MINIO_ROOT_PASSWORD_FILE: "/run/secrets/password"
      MC_INSECURE: true
    command:
      - ready minio
      - mb --ignore-existing minio/default
    volumes:
      - "mc.etc:/mc/etc"
    tmpfs:
      # needed for read-only
      - "/run/secrets:uid=1000,gid=1000"
    secrets:
      - "password"
    networks:
      backend:
    restart: "no"

volumes:
  minio.ssl:
  mc.etc:

networks:
  frontend:
  backend:
    internal: true

secrets:
  ca_key:
    file: "./ca.key.txt"
  ca_crt:
    file: "./ca.crt.txt"
  password:
    file: "./password.txt"